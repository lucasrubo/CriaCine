import{m as a,f as m}from"./index-C9JNmDcK.js";const l=()=>Math.random().toString(36).substr(2,9),c=o=>new Promise(t=>setTimeout(t,o)),g={async likePost(o,t){await c(200);const s=a.findIndex(n=>n.id===o);if(s===-1)return{success:!1,message:"Post não encontrado"};const e=a[s];return e.likedBy.includes(t)?{success:!1,message:"Post já foi curtido"}:(a[s]={...e,likes:e.likes+1,likedBy:[...e.likedBy,t],updatedAt:new Date},{success:!0,message:"Post curtido com sucesso",data:a[s]})},async unlikePost(o,t){await c(200);const s=a.findIndex(n=>n.id===o);if(s===-1)return{success:!1,message:"Post não encontrado"};const e=a[s];return e.likedBy.includes(t)?(a[s]={...e,likes:Math.max(0,e.likes-1),likedBy:e.likedBy.filter(n=>n!==t),updatedAt:new Date},{success:!0,message:"Curtida removida com sucesso",data:a[s]}):{success:!1,message:"Post não foi curtido"}},async savePost(o,t){await c(200);const s=a.findIndex(n=>n.id===o);if(s===-1)return{success:!1,message:"Post não encontrado"};const e=a[s];return e.savedBy.includes(t)?{success:!1,message:"Post já foi salvo"}:(a[s]={...e,saves:e.saves+1,savedBy:[...e.savedBy,t],updatedAt:new Date},{success:!0,message:"Post salvo com sucesso",data:a[s]})},async unsavePost(o,t){await c(200);const s=a.findIndex(n=>n.id===o);if(s===-1)return{success:!1,message:"Post não encontrado"};const e=a[s];return e.savedBy.includes(t)?(a[s]={...e,saves:Math.max(0,e.saves-1),savedBy:e.savedBy.filter(n=>n!==t),updatedAt:new Date},{success:!0,message:"Post removido dos salvos",data:a[s]}):{success:!1,message:"Post não foi salvo"}},async addComment(o){await c(300);const{postId:t,authorId:s,content:e}=o,n=a.findIndex(u=>u.id===t);if(n===-1)return{success:!1,message:"Post não encontrado"};const r=m(s);if(!r)return{success:!1,message:"Usuário não encontrado"};if(!e.trim())return{success:!1,message:"Comentário não pode estar vazio"};const d={id:l(),postId:t,authorId:s,author:r,content:e.trim(),createdAt:new Date},i=a[n];return a[n]={...i,comments:[...i.comments,d],updatedAt:new Date},{success:!0,message:"Comentário adicionado com sucesso",data:{comment:d,post:a[n]}}},async getPostComments(o){await c(200);const t=a.find(s=>s.id===o);return t?{success:!0,data:t.comments.sort((s,e)=>new Date(s.createdAt).getTime()-new Date(e.createdAt).getTime())}:{success:!1,message:"Post não encontrado"}},async getPostStats(o){await c(100);const t=a.find(s=>s.id===o);return t?{success:!0,data:{likes:t.likes,saves:t.saves,comments:t.comments.length,likedBy:t.likedBy,savedBy:t.savedBy}}:{success:!1,message:"Post não encontrado"}},async sharePost(o,t){if(await c(300),!a.find(n=>n.id===o))return{success:!1,message:"Post não encontrado"};const e=`${window.location.origin}/Roteirum/post/${o}`;if(navigator.clipboard)try{return await navigator.clipboard.writeText(e),{success:!0,message:"Link copiado para a área de transferência!",data:{shareUrl:e}}}catch{return{success:!0,message:"Post compartilhado com sucesso!",data:{shareUrl:e}}}return{success:!0,message:"Post compartilhado com sucesso!",data:{shareUrl:e}}},async getUserLikedPosts(o){return await c(300),{success:!0,data:a.filter(s=>s.likedBy.includes(o)).sort((s,e)=>new Date(e.updatedAt).getTime()-new Date(s.updatedAt).getTime())}},async getUserSavedPosts(o){return await c(300),{success:!0,data:a.filter(s=>s.savedBy.includes(o)).sort((s,e)=>new Date(e.updatedAt).getTime()-new Date(s.updatedAt).getTime())}},async getUserPosts(o){return await c(300),{success:!0,data:a.filter(s=>s.authorId===o).sort((s,e)=>new Date(e.createdAt).getTime()-new Date(s.createdAt).getTime())}}};export{g as postService};
